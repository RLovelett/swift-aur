From f6726f7b02be6acf00c89a6469b7066b02b6a2af Mon Sep 17 00:00:00 2001
From: Ryan Lovelett <ryan@lovelett.me>
Date: Wed, 30 Dec 2015 13:32:37 -0500
Subject: [PATCH 6/6] [gyb] Popen explicit string instead of byte sequence

The Popen command on Python returns a byte sequence on stdout by
default. However by sending the constructor the argument
`universal_newlines=True` it forces the Popen to put a string on stdout.

This was not a problem on Python 2 because the Python 2 regex engine
seemed to work find on byte sequences where Python 3's does not. By
explicitly converting everything to a string the same behavior is now
seen on Python 2 and 3.

See: https://docs.python.org/2/library/subprocess.html#frequently-used-arguments
See: https://docs.python.org/3/library/subprocess.html#frequently-used-arguments
---
 utils/line-directive | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/utils/line-directive b/utils/line-directive
index 7f147f8..2abcbbd 100755
--- a/utils/line-directive
+++ b/utils/line-directive
@@ -71,7 +71,10 @@ def run():
         sources = sys.argv[1:dashes]
 
         command = subprocess.Popen(
-            sys.argv[dashes + 1:], stderr = subprocess.STDOUT, stdout = subprocess.PIPE
+            sys.argv[dashes + 1:],
+            stderr = subprocess.STDOUT,
+            stdout = subprocess.PIPE,
+            universal_newlines = True
         )
         
         error_pattern = re.compile(
-- 
2.6.4

